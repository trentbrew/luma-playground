// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
import { isRequestOptions } from "../../core.mjs";
import * as CameraMotionAPI from "./camera-motion.mjs";
import { CameraMotion } from "./camera-motion.mjs";
import * as ImageAPI from "./image.mjs";
import { Image } from "./image.mjs";
import * as VideoAPI from "./video.mjs";
import { Video } from "./video.mjs";
export class Generations extends APIResource {
    constructor() {
        super(...arguments);
        this.cameraMotion = new CameraMotionAPI.CameraMotion(this._client);
        this.image = new ImageAPI.Image(this._client);
        this.video = new VideoAPI.Video(this._client);
    }
    /**
     * Initiate a new generation with the provided prompt
     */
    create(body, options) {
        return this._client.post('/generations', { body, ...options });
    }
    list(query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list({}, query);
        }
        return this._client.get('/generations', { query, ...options });
    }
    /**
     * Remove a specific generation by its ID
     */
    delete(id, options) {
        return this._client.delete(`/generations/${id}`, {
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
    /**
     * Retrieve details of a specific generation by its ID
     */
    get(id, options) {
        return this._client.get(`/generations/${id}`, options);
    }
}
Generations.CameraMotion = CameraMotion;
Generations.Image = Image;
Generations.Video = Video;
//# sourceMappingURL=generations.mjs.map