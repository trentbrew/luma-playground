import { APIResource } from "../../resource.js";
import * as Core from "../../core.js";
import * as GenerationsAPI from "./generations.js";
export declare class Video extends APIResource {
    /**
     * Initiate a new generation with the provided prompt
     */
    create(body: VideoCreateParams, options?: Core.RequestOptions): Core.APIPromise<GenerationsAPI.Generation>;
}
export interface VideoCreateParams {
    /**
     * The aspect ratio of the generation
     */
    aspect_ratio?: '1:1' | '16:9' | '9:16' | '4:3' | '3:4' | '21:9' | '9:21';
    /**
     * The callback URL of the generation, a POST request with Generation object will
     * be sent to the callback URL when the generation is dreaming, completed, or
     * failed
     */
    callback_url?: string;
    generation_type?: 'video';
    /**
     * The keyframes of the generation
     */
    keyframes?: VideoCreateParams.Keyframes;
    /**
     * Whether to loop the video
     */
    loop?: boolean;
    /**
     * The prompt of the generation
     */
    prompt?: string;
}
export declare namespace VideoCreateParams {
    /**
     * The keyframes of the generation
     */
    interface Keyframes {
        /**
         * The frame 0 of the generation
         */
        frame0?: Keyframes.GenerationReference | Keyframes.ImageReference;
        /**
         * The frame 1 of the generation
         */
        frame1?: Keyframes.GenerationReference | Keyframes.ImageReference;
    }
    namespace Keyframes {
        /**
         * The generation reference object
         */
        interface GenerationReference {
            /**
             * The ID of the generation
             */
            id: string;
            type: 'generation';
        }
        /**
         * The image object
         */
        interface ImageReference {
            type: 'image';
            /**
             * The URL of the image
             */
            url: string;
        }
        /**
         * The generation reference object
         */
        interface GenerationReference {
            /**
             * The ID of the generation
             */
            id: string;
            type: 'generation';
        }
        /**
         * The image object
         */
        interface ImageReference {
            type: 'image';
            /**
             * The URL of the image
             */
            url: string;
        }
    }
}
export declare namespace Video {
    export { type VideoCreateParams as VideoCreateParams };
}
//# sourceMappingURL=video.d.ts.map